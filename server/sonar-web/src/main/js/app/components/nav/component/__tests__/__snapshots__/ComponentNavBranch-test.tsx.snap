// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders main branch 1`] = `
<div
  className="navbar-context-branches"
>
  <div
    className="dropdown"
  >
    <Toggler
      onRequestClose={[Function]}
      open={false}
      overlay={
        <withRouter(ComponentNavBranchesMenu)
          branchLikes={
            Array [
              Object {
                "analysisDate": "2018-01-01",
                "isMain": true,
                "name": "master",
              },
              Object {
                "analysisDate": "2018-01-01",
                "isMain": false,
                "name": "branch-6.7",
                "type": "LONG",
              },
            ]
          }
          component={Object {}}
          currentBranchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": true,
              "name": "master",
            }
          }
          onClose={[Function]}
        />
      }
    >
      <a
        className="link-base-color link-no-underline nowrap"
        href="#"
        onClick={[Function]}
      >
        <BranchIcon
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": true,
              "name": "master",
            }
          }
          className="little-spacer-right"
        />
        <span
          className="text-limited text-top"
          title="master"
        >
          master
        </span>
        <DropdownIcon
          className="little-spacer-left"
        />
      </a>
    </Toggler>
  </div>
</div>
`;

exports[`renders no branch support popup 1`] = `
<DocTooltip
  className="spacer-left"
  doc={Promise {}}
>
  <PlusCircleIcon
    fill="#b4b4b4"
    size={12}
  />
</DocTooltip>
`;

exports[`renders pull request 1`] = `
<div
  className="navbar-context-branches"
>
  <div
    className="dropdown"
  >
    <Toggler
      onRequestClose={[Function]}
      open={false}
      overlay={
        <withRouter(ComponentNavBranchesMenu)
          branchLikes={
            Array [
              Object {
                "analysisDate": "2018-01-01",
                "base": "master",
                "branch": "feature/foo/bar",
                "key": "1001",
                "target": "feature/foo",
                "title": "Foo Bar feature",
                "url": "https://example.com/pull/1234",
              },
              Object {
                "analysisDate": "2018-01-01",
                "isMain": false,
                "name": "branch-6.7",
                "type": "LONG",
              },
            ]
          }
          component={Object {}}
          currentBranchLike={
            Object {
              "analysisDate": "2018-01-01",
              "base": "master",
              "branch": "feature/foo/bar",
              "key": "1001",
              "target": "feature/foo",
              "title": "Foo Bar feature",
              "url": "https://example.com/pull/1234",
            }
          }
          onClose={[Function]}
        />
      }
    >
      <a
        className="link-base-color link-no-underline nowrap"
        href="#"
        onClick={[Function]}
      >
        <BranchIcon
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "base": "master",
              "branch": "feature/foo/bar",
              "key": "1001",
              "target": "feature/foo",
              "title": "Foo Bar feature",
              "url": "https://example.com/pull/1234",
            }
          }
          className="little-spacer-right"
        />
        <span
          className="text-limited text-top"
          title="1001 – Foo Bar feature"
        >
          1001 – Foo Bar feature
        </span>
        <DropdownIcon
          className="little-spacer-left"
        />
      </a>
    </Toggler>
  </div>
  <span
    className="note big-spacer-left text-ellipsis flex-shrink"
  >
    <FormattedMessage
      defaultMessage="branches.pull_request.for_merge_into_x_from_y"
      id="branches.pull_request.for_merge_into_x_from_y"
      values={
        Object {
          "branch": <strong>
            feature/foo/bar
          </strong>,
          "target": <strong>
            feature/foo
          </strong>,
        }
      }
    />
  </span>
</div>
`;

exports[`renders short-living branch 1`] = `
<div
  className="navbar-context-branches"
>
  <div
    className="dropdown"
  >
    <Toggler
      onRequestClose={[Function]}
      open={false}
      overlay={
        <withRouter(ComponentNavBranchesMenu)
          branchLikes={
            Array [
              Object {
                "analysisDate": "2018-01-01",
                "isMain": false,
                "mergeBranch": "master",
                "name": "feature/foo",
                "status": Object {
                  "qualityGateStatus": "OK",
                },
                "type": "SHORT",
              },
              Object {
                "analysisDate": "2018-01-01",
                "isMain": false,
                "name": "branch-6.7",
                "type": "LONG",
              },
            ]
          }
          component={Object {}}
          currentBranchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": false,
              "mergeBranch": "master",
              "name": "feature/foo",
              "status": Object {
                "qualityGateStatus": "OK",
              },
              "type": "SHORT",
            }
          }
          onClose={[Function]}
        />
      }
    >
      <a
        className="link-base-color link-no-underline nowrap"
        href="#"
        onClick={[Function]}
      >
        <BranchIcon
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": false,
              "mergeBranch": "master",
              "name": "feature/foo",
              "status": Object {
                "qualityGateStatus": "OK",
              },
              "type": "SHORT",
            }
          }
          className="little-spacer-right"
        />
        <span
          className="text-limited text-top"
          title="feature/foo"
        >
          feature/foo
        </span>
        <DropdownIcon
          className="little-spacer-left"
        />
      </a>
    </Toggler>
  </div>
  <span
    className="note big-spacer-left"
  >
    from
     
    <strong>
      master
    </strong>
  </span>
</div>
`;

exports[`renders single branch popup 1`] = `
<DocTooltip
  className="spacer-left"
  doc={Promise {}}
>
  <PlusCircleIcon
    fill="#4b9fd5"
    size={12}
  />
</DocTooltip>
`;
