// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders sorted list of branches 1`] = `
<div
  className="page page-limited"
>
  <header
    className="page-header"
  >
    <h1
      className="page-title"
    >
      project_branches.page
    </h1>
    <LongBranchesPattern
      project="foo"
    />
    <p
      className="page-description"
    >
      project_branches.page.description
    </p>
    <p
      className="page-description"
    >
      <FormattedMessage
        defaultMessage="project_branches.page.life_time"
        id="project_branches.page.life_time"
        values={
          Object {
            "days": "100",
          }
        }
      />
      <br />
      <FormattedMessage
        defaultMessage="project_branches.page.life_time.admin"
        id="project_branches.page.life_time.admin"
        values={
          Object {
            "settings": <Link
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/admin/settings"
            >
              settings.page
            </Link>,
          }
        }
      />
    </p>
  </header>
  <div
    className="boxed-group boxed-group-inner"
  >
    <table
      className="data zebra zebra-hover"
    >
      <thead>
        <tr>
          <th>
            branch
          </th>
          <th
            className="thin nowrap"
          >
            status
          </th>
          <th
            className="thin nowrap text-right big-spacer-left"
          >
            branches.last_analysis_date
          </th>
          <th
            className="thin nowrap text-right"
          >
            actions
          </th>
        </tr>
      </thead>
      <tbody>
        <BranchRow
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": true,
              "name": "master",
            }
          }
          component="foo"
          isOrphan={false}
          onChange={[MockFunction]}
        />
        <BranchRow
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "base": "master",
              "branch": "feature/foo/bar",
              "key": "1001",
              "target": "master",
              "title": "Foo Bar feature",
            }
          }
          component="foo"
          onChange={[MockFunction]}
        />
        <BranchRow
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": false,
              "mergeBranch": "master",
              "name": "feature/foo",
              "type": "SHORT",
            }
          }
          component="foo"
          onChange={[MockFunction]}
        />
        <BranchRow
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": false,
              "name": "branch-6.7",
              "type": "LONG",
            }
          }
          component="foo"
          isOrphan={false}
          onChange={[MockFunction]}
        />
        <tr>
          <td
            colSpan={4}
          >
            <div
              className="display-inline-block text-middle"
            >
              branches.orphan_branches
            </div>
            <HelpTooltip
              className="spacer-left"
              overlay="branches.orphan_branches.tooltip"
            />
          </td>
        </tr>
        <BranchRow
          branchLike={
            Object {
              "analysisDate": "2018-01-01",
              "isMain": false,
              "isOrphan": true,
              "mergeBranch": "foobar",
              "name": "feature",
              "type": "SHORT",
            }
          }
          component="foo"
          isOrphan={true}
          onChange={[MockFunction]}
        />
      </tbody>
    </table>
  </div>
</div>
`;
